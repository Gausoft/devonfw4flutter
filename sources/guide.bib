
@unpublished{mooreDartProductiveFast2019,
  langid = {english},
  venue = {{Mountain View, CA}},
  title = {Dart: {{Productive}}, {{Fast}}, {{Multi}}-{{Platform}} - {{Pick}} 3},
  url = {https://www.youtube.com/watch?v=J5DQRPRBiFI},
  shorttitle = {Dart},
  type = {Conference Talk},
  eventtitle = {Google {{I}}/{{O}}'19},
  urldate = {2019-09-04},
  date = {2019-05-09},
  keywords = {dart,chp-110,1-summarized,5-clean,compiler,under-the-hood},
  author = {Moore, Kevin and Nystrom, Bob}
}

@unpublished{sullivanBuildReactiveMobile2018,
  langid = {english},
  venue = {{Mountain View, CA}},
  title = {Build Reactive Mobile Apps with {{Flutter}}},
  url = {https://www.youtube.com/watch?v=RS36gBEp8OI},
  type = {Conference Talk},
  eventtitle = {Google {{I}}/{{O}} '18},
  urldate = {2019-09-04},
  date = {2018-05-10},
  keywords = {architektur,bloc,scoped-model,1-summarized,5-clean,streams,chp-200},
  author = {Sullivan, Matt and Hracek, Filip}
}

@video{hracekPragmaticStateManagement2019,
  langid = {english},
  title = {Pragmatic {{State Management Using Provider}}},
  volume = {24},
  url = {https://www.youtube.com/watch?v=HrBiNHEqSYU},
  series = {The {{Boring Flutter Development Show}}},
  urldate = {2019-09-09},
  date = {2019},
  keywords = {architektur,bloc,scoped-model,1-summarized,5-clean,chp-200},
  director = {Hracek, Filip and Sullivan, Matt}
}

@online{suriArchitectYourFlutter2019,
  langid = {english},
  title = {Architect Your {{Flutter}} Project Using {{BLOC}} Pattern},
  url = {https://medium.com/flutterpub/architecting-your-flutter-project-bd04e144a8f1},
  journaltitle = {Medium},
  type = {Guide},
  urldate = {2019-09-09},
  date = {2019},
  keywords = {architektur,bloc,best-practice,1-summarized,5-clean,layered,chp-200,chp-400},
  author = {Suri, Sagar},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\9IH8MW3B\\architecting-your-flutter-project-bd04e144a8f1.html}
}

@video{sullivanTechnicalDebtStreams2018,
  langid = {english},
  title = {Technical {{Debt}} and {{Streams}}/{{BLoC}}},
  volume = {4},
  url = {https://www.youtube.com/watch?v=fahC3ky_zW0},
  series = {The {{Boring Flutter Development Show}}},
  urldate = {2019-09-09},
  date = {2018},
  keywords = {1-summarized,5-clean,architektur,bloc,chp-140,chp-200,streams},
  director = {Sullivan, Matt and Hracek, Filip}
}

@online{boelensFlutterBLoCScopedModel2019,
  langid = {english},
  title = {Flutter - {{BLoC}} - {{ScopedModel}} - {{Redux}} - {{Comparison}}},
  url = {https://www.didierboelens.com/2019/04/bloc---scopedmodel---redux---comparison/},
  journaltitle = {Didier Boelens},
  type = {Comparison},
  urldate = {2019-09-09},
  date = {2019},
  keywords = {redux,architektur,bloc,scoped-model,1-summarized,5-clean,chp-200},
  author = {Boelens, Didier},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\XKVYE4IE\\bloc---scopedmodel---redux---comparison.html}
}

@online{mackierFlutterProviderV32019,
  langid = {english},
  title = {Flutter {{Provider}} v3 {{Architecture}}},
  url = {https://www.filledstacks.com/post/flutter-provider-v3-architecture/},
  journaltitle = {filledstacks},
  type = {Guide},
  urldate = {2019-09-09},
  date = {2019},
  keywords = {architektur,scoped-model,1-summarized,5-clean},
  author = {Mackier, Dane},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\JPWCY5TK\\flutter-provider-v3-architecture.html}
}

@unpublished{staltzReactiveProgrammingWhy2017,
  langid = {english},
  venue = {{Poznan, Poland}},
  title = {Reactive {{Programming}}: {{Why It Matters}}},
  url = {https://www.youtube.com/watch?v=49dMGC1hM1o},
  shorttitle = {Reactive {{Programming}}},
  type = {Conference Talk},
  eventtitle = {{{PolyConf}} 16},
  urldate = {2019-09-04},
  date = {2017-11-26},
  keywords = {reactive-programming,1-summarized,5-clean},
  author = {Staltz, Andre}
}

@unpublished{doughtieArchitectingReactiveFlutter2017,
  langid = {english},
  venue = {{Bratislava, Slovakia}},
  title = {Architecting the {{Reactive Flutter App}}},
  url = {https://www.youtube.com/watch?v=n_5JULTrstU&feature=youtu.be},
  shorttitle = {{{ReactiveConf}} 2017 - {{Gavin Doughtie}}},
  type = {Conference Talk},
  eventtitle = {{{ReactiveConf}} 2017},
  urldate = {2019-08-29},
  date = {2017-11-20},
  keywords = {flutter-basics,redux,architektur,reactive-programming,1-summarized,5-clean,chp-200},
  author = {Doughtie, Gavin}
}

@online{savjolovsFlutterAppArchitecture2019,
  langid = {english},
  title = {Flutter App Architecture 101: {{Vanilla}}, {{Scoped Model}}, {{BLoC}}},
  url = {https://medium.com/flutter-community/flutter-app-architecture-101-vanilla-scoped-model-bloc-7eff7b2baf7e},
  shorttitle = {Flutter App Architecture 101},
  abstract = {Flutter provides a modern react-style framework, rich widget collection and tooling, but there’s nothing similar to Android’s guide to app…},
  journaltitle = {Medium},
  urldate = {2019-08-28},
  date = {2019},
  keywords = {architektur,bloc,scoped-model,1-summarized,5-clean,chp-200},
  author = {Savjolovs, Vadims},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\BTGA2V2I\\flutter-app-architecture-101-vanilla-scoped-model-bloc-7eff7b2baf7e.html}
}

@online{krankkaPuttingBuildMethods2018,
  langid = {english},
  title = {Putting Build Methods on a Diet},
  url = {https://iirokrankka.com/2018/06/18/putting-build-methods-on-a-diet/},
  abstract = {Why does Flutter layout code look so ugly? Deeply nesting brackets, long build methods and business logic and UI mixed up together… UGH! There must be something deeply wrong with Flutter’s design. Or maybe it’s all our fault instead?},
  journaltitle = {iirokrankka.com},
  type = {Blog},
  urldate = {2019-08-28},
  date = {2018},
  keywords = {flutter-basics,best-practice,1-summarized,5-clean,chp-400},
  author = {Krankka, Iiro},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\8IS3Y8YX\\putting-build-methods-on-a-diet.html}
}

@online{dartteamEffectiveDart2019,
  langid = {english},
  title = {Effective {{Dart}}},
  url = {https://dart.dev/guides/language/effective-dart},
  shorttitle = {Effective {{Dart}}},
  abstract = {Formatting and naming rules for consistent, readable code.},
  type = {Guide},
  urldate = {2019-08-28},
  date = {2019},
  keywords = {1-summarized,5-clean,best-practice,chp-400,convention,dart},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\TS3S937Y\\style.html}
}

@unpublished{sullivanPragmaticStateManagement2019,
  langid = {english},
  venue = {{Mountain View, CA}},
  title = {Pragmatic {{State Management}} in {{Flutter}}},
  url = {https://www.youtube.com/watch?v=d_m5csmrf7I},
  type = {Conference Talk},
  eventtitle = {Google {{I}}/{{O}}'19},
  urldate = {2019-08-28},
  date = {2019-05-09},
  keywords = {flutter-basics,architektur,scoped-model,1-summarized,5-clean,chp-200},
  author = {Sullivan, Matt and Hracek, Filip}
}

@unpublished{eganKeepItSimple2018,
  langid = {english},
  venue = {{Google Campus, LA}},
  title = {Keep It {{Simple}}, {{State}}: {{Architecture}} for {{Flutter Apps}}},
  url = {https://www.youtube.com/watch?v=zKXz3pUkw9A},
  shorttitle = {Keep It {{Simple}}, {{State}}},
  type = {Conference Talk},
  eventtitle = {{{DartConf}} 2018},
  urldate = {2019-08-28},
  date = {2018-01-25},
  keywords = {flutter-basics,redux,architektur,1-summarized,5-clean,chp-200},
  author = {Egan, Brian}
}

@online{eganFlutterArchitectureSamples2017,
  langid = {english},
  title = {Flutter {{Architecture Samples}}},
  url = {https://fluttersamples.com/},
  journaltitle = {fluttersamples},
  type = {Architecture Samples},
  urldate = {2019-08-28},
  date = {2017},
  keywords = {redux,architektur,bloc,scoped-model,1-summarized,5-clean,chp-200},
  author = {Egan, Brian and {Contributors}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\L6GVTDQ2\\fluttersamples.com.html}
}

@article{biorn-hansenSurveyTaxonomyCore2018,
  langid = {english},
  title = {A {{Survey}} and {{Taxonomy}} of {{Core Concepts}} and {{Research Challenges}} in {{Cross}}-{{Platform Mobile Development}}},
  volume = {51},
  issn = {0360-0300},
  url = {http://doi.acm.org/10.1145/3241739},
  doi = {10.1145/3241739},
  shorttitle = {Research {{Challenges}} in {{Cross}}-{{Platform Mobile}}},
  number = {5},
  journaltitle = {ACM Comput. Surv.},
  urldate = {2019-08-28},
  date = {2018-11},
  pages = {108:1--108:34},
  keywords = {cross-platform,1-summarized,5-clean,taxonomy,mobile},
  author = {Biørn-Hansen, Andreas and Grønli, Tor-Morten and Ghinea, Gheorghita},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\2N979SMP\\Biørn-Hansen et al. - 2018 - A Survey and Taxonomy of Core Concepts and Researc.pdf}
}

@inproceedings{nunkesserWebNativeHybrid2018,
  langid = {english},
  title = {Beyond {{Web}}/{{Native}}/{{Hybrid}}: {{A New Taxonomy}} for {{Mobile App Development}}},
  shorttitle = {Beyond {{Web}}/{{Native}}/{{Hybrid}}},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 5th {{International Conference}} on {{Mobile Software Engineering}} and {{Systems}} ({{MOBILESoft}})},
  booktitle = {2018 {{IEEE}}/{{ACM}} 5th {{International Conference}} on {{Mobile Software Engineering}} and {{Systems}} ({{MOBILESoft}})},
  publisher = {{IEEE}},
  date = {2018-05},
  pages = {214-218},
  keywords = {cross-platform,2-more-reading,5-clean,taxonomy,mobile},
  author = {Nunkesser, Robin},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\6FSZYEM6\\Nunkesser - 2018 - Beyond WebNativeHybrid A New Taxonomy for Mobil.pdf;C\:\\Users\\sebas\\Zotero\\storage\\DMSZB8TY\\8543456.html}
}

@unpublished{soaresFlutterAngularDartCode2018,
  langid = {english},
  venue = {{Google Campus, LA}},
  title = {Flutter / {{AngularDart}} – {{Code}} Sharing, Better Together},
  url = {https://www.youtube.com/watch?v=PLHln7wHgPE},
  type = {Conference Talk},
  eventtitle = {{{DartConf}} 2018},
  urldate = {2019-09-12},
  date = {2018-01-25},
  keywords = {architektur,bloc,chp-000,1-summarized,5-clean,chp-140,chp-200,chp-300},
  author = {Soares, Paolo}
}

@online{boelensFlutterReactiveProgramming2018,
  langid = {english},
  title = {Flutter - {{Reactive Programming}} - {{Streams}} - {{BLoC}}},
  url = {https://www.didierboelens.com/2018/08/reactive-programming---streams---bloc/},
  shorttitle = {Flutter {{BLoC Guide}}},
  journaltitle = {Didier Boelens},
  type = {Guide},
  urldate = {2019-09-12},
  date = {2018},
  keywords = {architektur,bloc,reactive-programming,1-summarized,5-clean,streams,chp-140,chp-200},
  author = {Boelens, Didier},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\5BQNA9QQ\\reactive-programming---streams---bloc.html}
}

@online{angelovBlocLibraryDart2019,
  langid = {english},
  title = {Bloc Library for {{Dart}}},
  url = {https://felangel.github.io/bloc/#/},
  shorttitle = {{{BLoC Libary}}},
  type = {Software Library Documentation},
  urldate = {2019-09-12},
  date = {2019},
  keywords = {architektur,bloc,4-orga,5-clean,chp-130,chp-200,chp-300},
  author = {Angelov, Felix and {Contributors}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\PUBSNADZ\\bloc.html}
}

@unpublished{martinPrinciplesCleanArchitecture2015,
  langid = {english},
  venue = {{King Street, Norwich}},
  title = {The {{Principles}} of {{Clean Architecture}}},
  url = {https://www.youtube.com/watch?v=o_TH-Y78tt4},
  type = {Talk},
  eventtitle = {"{{Uncle Bob Martin}}: {{The Principles}} of {{Clean Architecture}}" {{Meet}}-{{Up}}},
  urldate = {2019-09-13},
  date = {2015},
  keywords = {architektur,1-summarized,5-clean,layered,dependencies,chp-200},
  author = {Martin, Bob},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\WVEMLF7R\\watch.html}
}

@online{angelovFlutterInfiniteList2019,
  langid = {english},
  title = {Flutter {{Infinite List BLoC Tutorial}}},
  url = {https://felangel.github.io/bloc/#/flutterinfinitelisttutorial},
  shorttitle = {{{BLoC List}}},
  type = {Tutorial},
  urldate = {2019-09-13},
  date = {2019},
  keywords = {architektur,bloc,3-no-need-to-summarize,5-clean,chp-200},
  author = {Angelov, Felix and {Contributors}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\K9VHQ4R3\\bloc.html}
}

@online{tudresdenDeclarationOriginality,
  langid = {english},
  title = {Declaration of Originality},
  url = {https://tu-dresden.de/bu/bauingenieurwesen/studium/im-studium/access/copy2_of_index},
  journaltitle = {TU Dresden},
  type = {Document},
  urldate = {2019-09-17},
  keywords = {4-orga,5-clean},
  author = {{TU Dresden}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\2Y7P7KVA\\copy2_of_index.html}
}

@video{googlellcHowFlutterDifferent2019,
  langid = {english},
  title = {How Is {{Flutter}} Different for App Development},
  url = {https://www.youtube.com/watch?v=l-YO9CmaSUM&feature=youtu.be},
  publisher = {{Google Developers Official Youtube Channel}},
  urldate = {2019-09-19},
  date = {2019},
  keywords = {cross-platform,flutter-basics,chp-110,1-summarized,5-clean,compiler,under-the-hood},
  editora = {Aguinis, Martin},
  director = {{Google LLC}},
  editoratype = {collaborator}
}

@software{faustWisgen2019,
  location = {{Germany}},
  title = {Wisgen},
  url = {https://github.com/Fasust/wisgen},
  abstract = {A Cross-Platform Wisdom Generator built with Flutter},
  urldate = {2019-09-20},
  date = {2019-09-14T20:20:49Z},
  keywords = {chp-000,4-orga,5-clean,chp-130,chp-140,chp-200,chp-300,chp-400},
  author = {Faust, Sebastian}
}

@online{capgeminiCapgeminiHomePage2019,
  langid = {american},
  title = {Capgemini - {{Home Page}}},
  url = {https://www.capgemini.com/us-en/},
  shorttitle = {Capgemini},
  abstract = {A global leader in consulting, technology services and digital transformation, we offer an array of integrated services combining technology with deep sector expertise.},
  type = {Home Page},
  urldate = {2019-09-20},
  date = {2019},
  keywords = {chp-000,4-orga,5-clean,capgemini},
  author = {{Capgemini}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\NCNFFZCH\\us-en.html}
}

@online{technicaluniversitycologneTechnicalUniversityCologne2019,
  langid = {english},
  title = {Technical {{University Cologne}}},
  url = {https://www.th-koeln.de/en/homepage_26.php},
  type = {Home Page},
  urldate = {2019-09-20},
  date = {2019},
  keywords = {chp-000,4-orga,5-clean},
  author = {{Technical University Cologne}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\BPHE9665\\homepage_26.html}
}

@online{dartteamDartStreams2019,
  langid = {english},
  title = {Dart {{Streams}}},
  url = {https://dart.dev/tutorials/language/streams},
  abstract = {Learn how to consume single-subscriber and broadcast streams.},
  type = {Documentation},
  urldate = {2019-09-20},
  date = {2019},
  keywords = {dart,4-orga,5-clean,streams,chp-140,async,chp-200,chp-300},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\5T7PWG93\\streams.html}
}

@online{dartteamDartProgrammingLanguage2019,
  langid = {english},
  title = {Dart Programming Language},
  url = {https://dart.dev/},
  abstract = {Dart is a client-optimized language for fast apps on any platform},
  type = {Documentation},
  urldate = {2019-09-20},
  date = {2019},
  keywords = {dart,chp-000,4-orga,5-clean,chp-140,chp-300,chp-400},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\JT7QHEGU\\dart.dev.html}
}

@online{flutterdevteamWriteYourFirst2018,
  langid = {english},
  title = {Write Your First {{Flutter}} App},
  url = {https://flutter.dev/docs/get-started/codelab},
  type = {Guide},
  urldate = {2019-09-20},
  date = {2018},
  keywords = {flutter-basics,chp-000,3-no-need-to-summarize,5-clean},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\WWKHMASG\\codelab.html}
}

@software{flutterdevteamFlutterFramework2018,
  title = {The {{Flutter Framework}}},
  url = {https://flutter.dev/},
  abstract = {Flutter is Google's UI toolkit for crafting beautiful, natively compiled applications for mobile, web, and desktop from a single codebase.  Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.},
  version = {1.9},
  organization = {{Google LLC}},
  urldate = {2019-09-20},
  date = {2018},
  keywords = {chp-000,chp-110,chp-100,4-orga,5-clean,chp-120,chp-130,chp-140,chp-200,chp-300,chp-400},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\2FXJPBGS\\flutter.dev.html}
}

@online{ambuludiCapgeminiAngularGuide2019,
  langid = {english},
  title = {Capgemini {{Angular Guide}}},
  url = {https://github.com/devonfw/devon4ng},
  abstract = {devonfw platform for Angular. Contribute to devonfw/devon4ng development by creating an account on GitHub.},
  journaltitle = {GitHub},
  type = {Guide},
  urldate = {2019-09-20},
  date = {2019},
  keywords = {chp-000,4-orga,5-clean,capgemini,angular},
  author = {Ambuludi, Juan Andrés and Linares, Santos Jiménez and {Contributors}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\TLFDJNVU\\wiki.html}
}

@online{stollPlainEnglishWhat2018,
  langid = {english},
  title = {In Plain {{English}}: {{So}} What the Heck Is {{Flutter}} and Why Is It a Big Deal?},
  url = {https://medium.com/flutter-community/in-plain-english-so-what-the-heck-is-flutter-and-why-is-it-a-big-deal-7a6dc926b34a},
  journaltitle = {Medium},
  type = {Blog},
  urldate = {2019-09-22},
  date = {2018},
  keywords = {flutter-basics,chp-110,3-no-need-to-summarize,5-clean,under-the-hood},
  author = {Stoll, Scott},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\KQWT24GW\\in-plain-english-so-what-the-heck-is-flutter-and-why-is-it-a-big-deal-7a6dc926b34a.html}
}

@online{lelerWhatRevolutionaryFlutter2017,
  langid = {english},
  title = {What’s {{Revolutionary}} about {{Flutter}}},
  url = {https://hackernoon.com/whats-revolutionary-about-flutter-946915b09514},
  journaltitle = {hackernoon},
  type = {Blog},
  urldate = {2019-09-22},
  date = {2017},
  keywords = {flutter-basics,chp-110,3-no-need-to-summarize,5-clean,under-the-hood},
  author = {Leler, Wm},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\86IE6PYM\\whats-revolutionary-about-flutter-946915b09514.html}
}

@unpublished{kolPerformanceLimitationsReact2017,
  langid = {english},
  venue = {{Amsterdam}},
  title = {Performance {{Limitations}} of {{React Native}} and {{How}} to {{Overcome Them}}},
  url = {https://www.youtube.com/watch?v=psZLAHQXRsI},
  type = {Conference Talk},
  eventtitle = {React {{Amsterdam}}},
  urldate = {2019-09-22},
  date = {2017},
  keywords = {reactive-programming,react-native,chp-110,1-summarized,5-clean,performance,bridging},
  author = {Kol, Tal},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\VRDLW3RX\\watch.html}
}

@online{flutterdevteamFlutterState2019,
  langid = {english},
  title = {Flutter {{State}}},
  url = {https://flutter.dev/docs/development/data-and-backend/state-mgmt},
  type = {Documentation},
  urldate = {2019-09-22},
  date = {2019},
  keywords = {flutter-basics,architektur,chp-110,chp-100,1-summarized,5-clean,chp-120,widget-tree,declerative,chp-130,chp-200},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\YNZXTJT7\\state-mgmt.html}
}

@software{facebookReactNativeFramework2015,
  title = {React {{Native Framework}}},
  url = {https://facebook.github.io/react-native/},
  organization = {{Facebook}},
  urldate = {2019-09-22},
  date = {2015},
  keywords = {react-native,chp-110,4-orga,5-clean,chp-120,chp-200},
  author = {{Facebook}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\5D5UPEUJ\\react-native.html}
}

@online{flutterdevteamFAQFlutter2019,
  langid = {english},
  title = {{{FAQ}} - {{Flutter}}},
  url = {https://flutter.dev/docs/resources/faq},
  type = {FAQ},
  urldate = {2019-09-22},
  date = {2019},
  keywords = {flutter-basics,chp-110,1-summarized,5-clean,under-the-hood},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\ELM45BSM\\faq.html}
}

@online{flutterdevteamHotReloadFlutter2019,
  langid = {english},
  title = {Hot Reload - {{Flutter}}},
  url = {https://flutter.dev/docs/development/tools/hot-reload},
  type = {Documentation},
  urldate = {2019-09-22},
  date = {2019},
  keywords = {chp-110,4-orga,5-clean,under-the-hood},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\VICVVW73\\hot-reload.html}
}

@video{googlellcHowCreateStateless2018,
  langid = {english},
  title = {How to {{Create Stateless Widgets}}},
  volume = {Ep. 1},
  url = {https://www.youtube.com/watch?v=wE7khGHVkYY},
  series = {Flutter {{Widgets}} 101},
  urldate = {2019-09-23},
  date = {2018},
  keywords = {flutter-basics,1-summarized,5-clean,widget-tree,chp-130},
  editora = {Aguinis, Martin},
  director = {{Google LLC}},
  editoratype = {collaborator}
}

@video{googlellcHowStatefulWidgets2018,
  langid = {english},
  title = {How {{Stateful Widgets Are Used Best}}},
  volume = {Ep. 2},
  url = {https://www.youtube.com/watch?v=AqCMFXEmf3w},
  abstract = {In Episode 2 of Flutter Widgets 101, Andrew Brogdon explains the difference between stateful and stateless widgets, how state objects work, and more. If you didn’t see the first episode, click here to watch → http://bit.ly/FlutterWidgets101-1 

Get started with Flutter → http://bit.ly/2qu9EP2 
Try a Flutter codelab → http://bit.ly/Flutter-Codelab 
Guide to creating a StatefulWidget → http://bit.ly/2Rz9em3 
StatefulWidget API Docs. → http://bit.ly/2zELLJ1 

Watch other episodes in the series →  http://bit.ly/FlutterWidgets101
Stay tuned and subscribe for latest releases → http://bit.ly/googledevs},
  series = {Flutter {{Widgets}} 101},
  urldate = {2019-09-23},
  date = {2018},
  keywords = {flutter-basics,1-summarized,5-clean,widget-tree,chp-130},
  editora = {Brogdon, Andrew},
  director = {{Google LLC}},
  editoratype = {collaborator}
}

@online{boelensWidgetStateBuildContext2018,
  langid = {english},
  title = {Widget — {{State}} — {{BuildContext}} — {{InheritedWidget}}},
  url = {https://medium.com/flutter-community/widget-state-buildcontext-inheritedwidget-898d671b7956},
  abstract = {This article covers the important notions of Widget, State, BuildContext and InheritedWidget in Flutter Applications.},
  journaltitle = {Medium},
  type = {Blog},
  urldate = {2019-09-23},
  date = {2018},
  keywords = {flutter-basics,1-summarized,5-clean,widget-tree,chp-130},
  author = {Boelens, Didier},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\9VPIJPG3\\widget-state-buildcontext-inheritedwidget-898d671b7956.html}
}

@online{flutterdevteamIntroductionDeclarativeUI2019,
  langid = {english},
  title = {Introduction to Declarative {{UI}}},
  url = {https://flutter.dev/docs/get-started/flutter-for/declarative},
  abstract = {Explains the difference between a declarative and imperative programming style.},
  type = {Documentation},
  urldate = {2019-09-24},
  date = {2019},
  keywords = {flutter-basics,1-summarized,5-clean,chp-120,declerative},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\D5BKE687\\declarative.html}
}

@online{flutterdevteamFlutterWidgets2019,
  langid = {english},
  title = {Flutter {{Widgets}}},
  url = {https://flutter.dev/docs/development/ui/widgets-intro},
  type = {Documentation},
  urldate = {2019-09-25},
  date = {2019},
  keywords = {flutter-basics,3-no-need-to-summarize,5-clean,chp-120,widget-tree,chp-130,chp-200},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\W2T38TSW\\widgets-intro.html}
}

@article{adinugrohoReviewMultiplatformMobile2015,
  langid = {english},
  title = {Review of {{Multi}}-Platform {{Mobile Application Development Using WebView}}: {{Learning Management System}} on {{Mobile Platform}}},
  volume = {59},
  issn = {1877-0509},
  url = {http://www.sciencedirect.com/science/article/pii/S1877050915020979},
  doi = {10.1016/j.procs.2015.07.568},
  shorttitle = {Review of {{Multi}}-Platform {{Mobile Application Development Using WebView}}},
  abstract = {The advancement of mobile technology and the internet network and their rapid adoption has enabled instant information access without relying on desktop or notebook computers. By using this technology, Learning Management System (LMS) can provide an unimpeded interaction for their users and promote awareness for any information updates. It is crucial to develop mobile application for each major mobile platform to reach most of the LMS user. In this paper, the mobile application development was done by combining native mobile technology and web technology using WebView API. This approach was taken to anticipate the need for creating and maintaining the application on multiple mobile platform and was expected to cut development time frame while retaining consistent interface and still enable platform specific's feature usage. The purpose of this study is to review the strengths and weaknesses of such combination in mobile application development specifically under android platform.},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  series = {International {{Conference}} on {{Computer Science}} and {{Computational Intelligence}} ({{ICCSCI}} 2015)},
  urldate = {2019-09-25},
  date = {2015-01-01},
  pages = {291-297},
  keywords = {cross-platform,chp-110,1-summarized,5-clean,bridging},
  author = {Adinugroho, Timothy Yudi and {Reina} and Gautama, Josef Bernadi},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\KKAX3YGI\\Adinugroho et al. - 2015 - Review of Multi-platform Mobile Application Develo.pdf;C\:\\Users\\sebas\\Zotero\\storage\\6CWQL85I\\S1877050915020979.html}
}

@video{computerphileHTMLProgrammingLanguage2016,
  location = {{University of Nottingham}},
  title = {{{HTML IS}} a {{Programming Language}} ({{Imperative}} vs {{Declarative}})},
  url = {https://www.youtube.com/watch?v=4A2mWqLUpzw},
  abstract = {The professor took a lot of stick for calling HTML a programming language - here he shows why it can be described as a language, albeit a special purpose one. 

Where HTML beats C?: https://youtu.be/-csXdj4WVwA
Most Difficult Program to Compute: https://youtu.be/i7sm9dzFtEI
Cookie Stealing: https://youtu.be/T1QEs3mdJoc
Deep Web \&amp; Dark Web: https://www.youtube.com/playlist?list...

(Declarative) Haskell Example: https://youtu.be/EuWrAlKTkak

http://www.facebook.com/computerphile
https://twitter.com/computer\_phile

This video was filmed and edited by Sean Riley.

Computer Science at the University of Nottingham: http://bit.ly/nottscomputer

Computerphile is a sister project to Brady Haran's Numberphile. More at http://www.bradyharan.com},
  urldate = {2019-09-25},
  date = {2016},
  keywords = {1-summarized,5-clean,chp-120,declerative},
  editora = {Riley, Sean and Brailsford, David},
  director = {{Computerphile}},
  editoratype = {collaborator}
}

@video{bezerraDeclarativeProgramming2018,
  langid = {english},
  title = {Declarative Programming},
  url = {https://www.youtube.com/watch?v=yGh0bjzj4IQ&t=632s},
  series = {Fun {{Fun Function}}},
  urldate = {2019-09-25},
  date = {2018},
  keywords = {1-summarized,5-clean,chp-120,declerative},
  director = {Bezerra, Josimar},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\ZTA2JNCC\\watch.html}
}

@software{appleIOSSDK2010,
  title = {{{iOS SDK}}},
  url = {https://developer.apple.com/ios/},
  version = {13},
  organization = {{Apple}},
  urldate = {2019-09-25},
  date = {2010},
  keywords = {chp-110,4-orga,5-clean,chp-120},
  author = {{Apple}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\T5JXS4XV\\ios.html}
}

@software{googlellcAndroidSDK2008,
  title = {Android {{SDK}}},
  url = {https://developer.android.com/},
  abstract = {The official site for Android app developers. Provides the Android SDK tools and API documentation.},
  version = {10},
  organization = {{Google LLC}},
  urldate = {2019-09-25},
  date = {2008},
  keywords = {chp-110,4-orga,5-clean,chp-120},
  author = {{Google LLC}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\9HLIFL87\\developer.android.com.html}
}

@software{oracleJavaJDK1996,
  title = {Java {{JDK}}},
  url = {https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html},
  version = {8},
  organization = {{Oracle}},
  urldate = {2019-09-26},
  date = {1996},
  keywords = {chp-000,4-orga,5-clean,chp-400},
  author = {{Oracle}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\33NZ5YSG\\jdk8-downloads-2133151.html}
}

@software{jetbrainsKotlinSDK2017,
  title = {Kotlin {{SDK}}},
  url = {https://kotlinlang.org/},
  version = {1.3},
  organization = {{Jet Brains}},
  urldate = {2019-09-26},
  date = {2017},
  keywords = {chp-000,4-orga,5-clean},
  author = {{Jet Brains}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\G9MDGIV2\\kotlinlang.org.html}
}

@software{ecmaJavaScriptECMAStandard1997,
  title = {{{JavaScript ECMA Standard}}},
  url = {https://www.ecma-international.org/publications/standards/Ecma-262.htm},
  version = {10},
  organization = {{ECMA}},
  urldate = {2019-09-26},
  date = {1997},
  keywords = {chp-000,chp-110,4-orga,5-clean,chp-140,chp-400},
  author = {{ECMA}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\ZT8LEDKS\\Language_Resources.html}
}

@online{windmillStatefulWidgetLifecycle2019,
  langid = {english},
  title = {Stateful {{Widget Lifecycle}}},
  url = {https://flutterbyexample.com//stateful-widget-lifecycle},
  journaltitle = {flutterbyexample},
  type = {Blog},
  urldate = {2019-10-01},
  date = {2019},
  keywords = {3-no-need-to-summarize,5-clean,widget-tree,chp-130},
  author = {Windmill, Eric and {Contributors}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\QZQ73E5P\\stateful-widget-lifecycle.html}
}

@online{flutterdevteamStatefulWidgetClass2018,
  langid = {english},
  title = {{{StatefulWidget}} Class},
  url = {https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html},
  type = {Documentation},
  urldate = {2019-10-01},
  date = {2018},
  keywords = {4-orga,5-clean,widget-tree,chp-130},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\8GRV6Q32\\StatefulWidget-class.html}
}

@online{flutterdevteamStatelessWidgetClass2018,
  langid = {english},
  title = {{{StatelessWidget}} Class},
  url = {https://api.flutter.dev/flutter/widgets/StatelessWidget-class.html},
  type = {Documentation},
  urldate = {2019-10-01},
  date = {2018},
  keywords = {4-orga,5-clean,widget-tree,chp-130},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\DMLIZSIW\\StatelessWidget-class.html}
}

@online{flutterdevteamInheritedWidgetClass2018,
  langid = {english},
  title = {{{InheritedWidget}} Class},
  url = {https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html},
  type = {Documentation},
  urldate = {2019-10-01},
  date = {2018},
  keywords = {4-orga,5-clean,widget-tree,chp-130,chp-200},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\DGZKUGXF\\InheritedWidget-class.html}
}

@online{flutterdevteamBuildContextClass2018,
  langid = {english},
  title = {{{BuildContext}} Class},
  url = {https://api.flutter.dev/flutter/widgets/BuildContext-class.html},
  type = {Documentation},
  urldate = {2019-10-01},
  date = {2018},
  keywords = {4-orga,5-clean,chp-130},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\GUFFQ2L7\\BuildContext-class.html}
}

@online{dartteamHttpDartPackage2019,
  langid = {american},
  title = {Http | {{Dart Package}}},
  url = {https://pub.dev/packages/http},
  abstract = {A composable, cross-platform, Future-based API for making HTTP requests.},
  journaltitle = {Dart packages},
  urldate = {2019-10-01},
  date = {2019},
  keywords = {4-orga,5-clean,flutter-web,chp-140},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\DH75CYWE\\http.html}
}

@online{dartteamAsynchronousProgrammingDart2018,
  langid = {english},
  title = {Asynchronous Programming in {{Dart}}},
  url = {https://dart.dev/codelabs/async-await},
  type = {Documentation},
  urldate = {2019-10-01},
  date = {2018},
  keywords = {4-orga,5-clean,chp-140,async},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\9ZV8Y7AS\\async-await.html}
}

@online{kissAdviceSlipAPI2019,
  langid = {english},
  title = {Advice {{Slip API}}},
  url = {https://api.adviceslip.com/},
  type = {Documentation},
  urldate = {2019-10-01},
  date = {2019},
  keywords = {4-orga,5-clean,chp-140},
  author = {Kiss, Tom},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\VEXVZLP3\\api.adviceslip.com.html}
}

@software{lecuonaJSONDartConverter2019,
  location = {{Buenos Aires, Argentina}},
  title = {{{JSON}} to {{Dart}} Converter},
  url = {https://javiercbk.github.io/json_to_dart/},
  version = {1},
  urldate = {2019-10-01},
  date = {2019},
  keywords = {4-orga,5-clean,chp-140},
  author = {Lecuona, Javier},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\9A476LZG\\json_to_dart.html}
}

@video{googlellcAsyncAwait2019,
  langid = {english},
  title = {Async/{{Await}}},
  volume = {Ep. 4},
  url = {https://www.youtube.com/watch?v=SmTCmDMi4BY},
  abstract = {This is the fourth video in the Flutter in Focus series on asynchronous coding in Dart. In this episode, learn how to use the async and await keywords with Dart's Futures. They can help you avoid nested callbacks and keep your asynchronous code tight and easy to read.
For more deep dives on things like Stateless and Stateful widgets, Flutter on iOS, and other advanced topics, check out the other episodes of Flutter in Focus.
Asynchronous programming: futures \&amp; async-await → https://goo.gle/2XJLPSd 

Flutter in Focus Playlist → https://goo.gle/FlutterInFocus 

Get started with Flutter → https://flutter.dev 
Try a Flutter codelab → https://goo.gl/d3fHPo 
Join the conversation → https://goo.gl/68oUnb 

This video is also subtitled in Chinese, Indonesian, Italian, Japanese, Korean, Portuguese, and Spanish.

Subscribe to the Flutter channel → https://goo.gle/Flutter},
  series = {Flutter in {{Focus}}},
  urldate = {2019-10-01},
  date = {2019-07-12},
  keywords = {1-summarized,5-clean,chp-140,async},
  director = {{Google LLC}}
}

@video{googlellcDartStreams2019,
  langid = {english},
  title = {Dart {{Streams}}},
  volume = {Ep. 3},
  url = {https://www.youtube.com/watch?v=nQBpOIHE4eE&list=PLjxrf2q8roU2HdJQDjJzOeO6J3FoFLWr2&index=17},
  abstract = {Let's learn Flutter features in 10 minutes or less with our new series, Flutter in Focus! We’ll not only show you the right code for a situation, but also explain the under-the-hood details that make it the right code. If you've ever been interested in learning how Dart's streams really work, or how a CustomPaint widget wires itself into Flutter's paint cycle, this is the series for you!

Subscribe to the Flutter YouTube channel → http://bit.ly/flutterdev

Follow us on Twitter → https://twitter.com/flutterio
Check us out on the web → https://flutter.dev/},
  series = {Flutter in {{Focus}}},
  urldate = {2019-10-01},
  date = {2019-06-28},
  keywords = {1-summarized,5-clean,streams,chp-140,async},
  editora = {Brogdon, Andrew},
  director = {{Google LLC}},
  editoratype = {collaborator}
}

@video{googlellcDartFutures2019,
  langid = {english},
  title = {Dart {{Futures}}},
  volume = {Ep. 2},
  url = {https://www.youtube.com/watch?v=OTS-ap9_aXc},
  abstract = {This is the second video in the Flutter in Focus series on asynchronous coding in Dart. In this episode, learn everything about Future objects, Dart’s most basic API for async, including how to handle data, catch errors, and put futures to work building Flutter widgets with FutureBuilder.

For more deep dives on things like Stateless and Stateful widgets, Flutter on iOS, and other advanced topics, check out the other episodes of Flutter in Focus.

Asynchronous programming: futures \&amp; async-await → https://goo.gle/2XJLPSd 
Isolate Class → https://goo.gle/2F8Mg1g 

Flutter in Focus Playlist → https://goo.gle/FlutterInFocus 

Get started with Flutter → https://flutter.dev 
Try a Flutter codelab → https://goo.gl/d3fHPo 
Join the conversation → https://goo.gl/68oUnb 

Subscribe to the Flutter channel → https://goo.gle/Flutter},
  series = {Flutter in {{Focus}}},
  urldate = {2019-10-01},
  date = {2019-06-21},
  keywords = {1-summarized,5-clean,chp-140,async},
  director = {{Google LLC}}
}

@video{googlellcIsolatesEventLoops2019,
  langid = {english},
  title = {Isolates and {{Event Loops}}},
  volume = {Ep. 1},
  url = {https://www.youtube.com/watch?v=vl_AaCgudcY},
  abstract = {This is the first video in the Flutter in Focus series on asynchronous coding in Dart. In this episode, you can learn about how Dart's isolates and event loops lay the groundwork for Futures, Streams, background tasks, and all the other things you need to write modern, reactive applications.

For more deep dives on things like Stateless and Stateful widgets, Flutter on iOS, and other advanced topics, check out the other episodes of Flutter in Focus.

Isolate Class → https://goo.gle/2wMjajF 
Flutter in Focus Playlist → https://goo.gle/FlutterInFocus 

Get started with Flutter → https://flutter.dev 
Try a Flutter codelab → https://goo.gl/d3fHPo 
Join the conversation → https://goo.gl/68oUnb 

Subscribe to the Flutter channel → https://goo.gle/Flutter},
  series = {Flutter in {{Focus}}},
  urldate = {2019-10-01},
  date = {2019-06-19},
  keywords = {1-summarized,5-clean,under-the-hood,chp-140,async},
  director = {{Google LLC}}
}

@video{googlellcStreamBuilder2019,
  langid = {english},
  title = {{{StreamBuilder}}},
  url = {https://www.youtube.com/watch?v=MkKEWHfy99Y},
  series = {Flutter {{Widget}} of the {{Week}}},
  urldate = {2019-10-03},
  date = {2019},
  keywords = {3-no-need-to-summarize,5-clean,streams,async,chp-200},
  director = {{Google LLC}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\QKD4ASBF\\watch.html}
}

@online{flutterdevteamScrollControllerClass2018,
  langid = {english},
  title = {{{ScrollController}} Class},
  url = {https://api.flutter.dev/flutter/widgets/ScrollController-class.html},
  type = {Documentation},
  urldate = {2019-10-03},
  date = {2018},
  keywords = {4-orga,5-clean,chp-140},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\5GRVMK9L\\ScrollController-class.html}
}

@online{flutterdevteamStreamBuilderClass2018,
  langid = {english},
  title = {{{StreamBuilder}} Class},
  url = {https://api.flutter.dev/flutter/widgets/StreamBuilder-class.html},
  type = {Documentation},
  urldate = {2019-10-03},
  date = {2018},
  keywords = {4-orga,5-clean,chp-140},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\LCFVXPGT\\StreamBuilder-class.html}
}

@online{rousseletProviderFlutterPackage2018,
  langid = {american},
  title = {Provider | {{Flutter Package}}},
  url = {https://pub.dev/packages/provider},
  abstract = {A mixture between dependency injection and state management, built with widgets for widgets.},
  journaltitle = {Dart packages},
  type = {Documentation},
  urldate = {2019-10-06},
  date = {2018},
  keywords = {4-orga,5-clean,architektur,chp-200,scoped-model},
  author = {Rousselet, Remi and {Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\JKJ5A4MG\\provider.html}
}

@online{flutterdevteamChangeNotifierClass2018,
  langid = {english},
  title = {{{ChangeNotifier}} Class},
  url = {https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html},
  type = {Documentation},
  urldate = {2019-10-06},
  date = {2018},
  keywords = {4-orga,5-clean,chp-200},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\SQKHLD8A\\ChangeNotifier-class.html}
}

@online{abramovRedux2015,
  langid = {english},
  title = {Redux},
  url = {https://redux.js.org/},
  abstract = {A Predictable State Container for JS Apps},
  type = {Documentation},
  urldate = {2019-10-06},
  date = {2015},
  keywords = {4-orga,5-clean,chp-200,redux},
  author = {Abramov, Dan},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\7PGFCAW7\\redux.js.org.html}
}

@online{googlellcAngular2016,
  langid = {english},
  title = {Angular},
  url = {https://angular.io/},
  type = {Documentation},
  urldate = {2019-10-06},
  date = {2016},
  keywords = {4-orga,5-clean,angular,chp-200},
  author = {{Google LLC}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\QPQ3GQAB\\angular.io.html}
}

@online{eganFlutterReduxPackage2017,
  langid = {american},
  title = {Flutter {{Redux Package}}},
  url = {https://pub.dev/packages/flutter_redux},
  abstract = {A set of utility Widgets that Provide and Connect to a Redux Store},
  journaltitle = {Dart packages},
  type = {Documentation},
  urldate = {2019-10-06},
  date = {2017},
  keywords = {4-orga,5-clean,chp-200,redux},
  author = {Egan, Brian},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\LJDQGJSU\\flutter_redux.html}
}

@online{googlellcAngularDart2018,
  langid = {english},
  title = {{{AngularDart}}},
  url = {https://angulardart.dev/},
  abstract = {AngularDart is a web app framework that focuses on productivity, performance, and stability.},
  type = {Documentation},
  urldate = {2019-10-07},
  date = {2018},
  keywords = {dart,4-orga,5-clean,angular,chp-200},
  author = {{Google LLC}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\B7VXNZVG\\angulardart.dev.html}
}

@online{abramovThreePrinciplesRedux2015,
  langid = {english},
  title = {Three {{Principles}} of {{Redux}}},
  url = {https://redux.js.org/},
  type = {Documentation},
  urldate = {2019-10-08},
  date = {2015},
  keywords = {redux,architektur,4-orga,5-clean,chp-200},
  author = {Abramov, Dan},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\ZPDJX7AE\\three-principles.html}
}

@online{googlellcSharedPreferences2011,
  langid = {english},
  title = {{{SharedPreferences}}},
  url = {https://developer.android.com/reference/android/content/SharedPreferences},
  journaltitle = {Android Developers},
  type = {Documentation},
  urldate = {2019-10-09},
  date = {2011},
  keywords = {4-orga,5-clean,chp-200},
  author = {{Google LLC}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\AANZRQ6V\\SharedPreferences.html}
}

@online{angelovUnitTestingBloc2019,
  langid = {english},
  title = {Unit {{Testing}} with “{{Bloc}}”},
  url = {https://medium.com/flutter-community/unit-testing-with-bloc-b94de9655d86},
  abstract = {In the last article, we created a simple login flow using the bloc and flutter\_bloc packages. If you haven’t checked it out already, you…},
  journaltitle = {Medium},
  type = {Tutorial},
  urldate = {2019-10-09},
  date = {2019},
  keywords = {bloc,1-summarized,5-clean,testing,chp-300},
  author = {Angelov, Felix},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\7UUP4UCV\\unit-testing-with-bloc-b94de9655d86.html}
}

@video{hracekTestingFlutterApps2019,
  langid = {english},
  title = {Testing {{Flutter Apps}} - {{Making Sure Your Code Works}}},
  volume = {Ep. 21},
  url = {https://www.youtube.com/watch?v=bj-oMYyLZEY&},
  abstract = {In this episode of the Boring Show, Filip and guest Anthony go over how to test your Flutter apps before publishing it and the different types of automated testing: unit, widget, and integration.

Get started with Testing Flutter apps → http://bit.ly/2DLtn3Y 

Watch more episodes of the Boring Show here → https://bit.ly/2SepZmA

Get started with Flutter → https://flutter.dev
Learn more about the Dart Language → https://www.dartlang.org/
Try a Flutter codelab → https://goo.gl/d3fHPo
Join the conversation → https://goo.gl/68oUnb
Subscribe to the Flutter channel → https://goo.gle/Flutter},
  series = {The {{Boring Flutter Development Show}}},
  urldate = {2019-10-09},
  date = {2019},
  keywords = {1-summarized,5-clean,testing,chp-300},
  director = {Hracek, Filip and Robledo, Anthony}
}

@online{dartteamTestDartPackage2019,
  langid = {american},
  title = {Test | {{Dart Package}}},
  url = {https://pub.dev/packages/test},
  abstract = {A full featured library for writing and running Dart tests.},
  journaltitle = {Dart packages},
  type = {Documentation},
  urldate = {2019-10-09},
  date = {2019},
  keywords = {4-orga,5-clean,testing,chp-300},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\RNQWI925\\test.html}
}

@online{flutterdevteamTestingFlutterApps2018,
  langid = {english},
  title = {Testing {{Flutter}} Apps},
  url = {https://flutter.dev/docs/testing},
  abstract = {The more features your app has, the harder it is to test manually.Automated tests help ensure that your app performs correctly beforeyou publish it, while retaining your feature and bug fix velocity.Automated testing falls into a few categories:* A [\_unit test\_](\#unit-tests) tests a single function, method, or class. * A...},
  type = {Tutorial},
  urldate = {2019-10-09},
  date = {2018},
  keywords = {best-practice,1-summarized,5-clean,testing,chp-300},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\VJE2MF49\\testing.html}
}

@online{fibulwinterMockitoDartPackage2019,
  langid = {american},
  title = {Mockito | {{Dart Package}}},
  url = {https://pub.dev/packages/mockito},
  abstract = {A mock framework inspired by Mockito.},
  journaltitle = {Dart packages},
  type = {Documentation},
  urldate = {2019-10-09},
  date = {2019},
  keywords = {4-orga,5-clean,testing,chp-300},
  author = {Fibulwinter, Dmitriy and {Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\26C2LL7U\\mockito.html}
}

@online{angelovEquatableDartPackage2019,
  langid = {american},
  title = {Equatable | {{Dart Package}}},
  url = {https://pub.dev/packages/equatable#-example-tab-},
  abstract = {An abstract class that helps to implement equality without needing to explicitly override == and hashCode.},
  journaltitle = {Dart packages},
  type = {Documentation},
  urldate = {2019-10-09},
  date = {2019},
  keywords = {bloc,4-orga,5-clean,testing,chp-300},
  author = {Angelov, Felix},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\7PEPTBAJ\\equatable.html}
}

@report{garlanIntroductionSoftwareArchitecture1994,
  langid = {english},
  location = {{Pittsburgh, PA, USA}},
  title = {An {{Introduction}} to {{Software Architecture}}},
  url = {https://dl.acm.org/citation.cfm?id=865128},
  abstract = {As the size of software systems increases, the algorithms and data structures of the computation no longer constitute the major design problems. When systems are constructed from many components, the organization of the overall system -- the software architecture -- presents a new set of design problems. This level of design has been addressed in a number of ways including informal diagrams and descriptive terms, module interconnection languages, templates and frameworks for systems that serve the needs of specific domains, and formal models of component integration mechanisms. In this paper we provide an introduction to the emerging field of software architecture. We begin by considering a number of common architectural styles upon which many systems are currently based and show how different styles can be combined in a single design. Then we present six case studies to illustrate how architectural representations can improve our understanding of complex software systems. Finally, we survey some of the outstanding problems in the field, and consider a few of the promising research directions.},
  institution = {{Carnegie Mellon University}},
  date = {1994},
  keywords = {architektur,1-summarized,5-clean,chp-200},
  author = {Garlan, David and Shaw, Mary}
}

@online{bizzottoWidgetAsyncBlocServicePracticalArchitecture2019,
  langid = {english},
  title = {Widget-{{Async}}-{{Bloc}}-{{Service}}: {{A Practical Architecture}} for {{Flutter Apps}}},
  url = {https://medium.com/coding-with-flutter/widget-async-bloc-service-a-practical-architecture-for-flutter-apps-250a28f9251b},
  shorttitle = {Widget-{{Async}}-{{Bloc}}-{{Service}}},
  abstract = {Difficulty level: Intermediate/advanced. All opinions are my own.},
  journaltitle = {Medium},
  type = {Blog},
  urldate = {2019-10-10},
  date = {2019},
  keywords = {architektur,bloc,1-summarized,5-clean,layered,chp-200},
  author = {Bizzotto, Andrea},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\YLTCBCTT\\widget-async-bloc-service-a-practical-architecture-for-flutter-apps-250a28f9251b.html}
}

@inproceedings{georgeInitialInvestigationTest2003,
  location = {{New York, NY, USA}},
  title = {An {{Initial Investigation}} of {{Test Driven Development}} in {{Industry}}},
  isbn = {978-1-58113-624-1},
  url = {http://doi.acm.org/10.1145/952532.952753},
  doi = {10.1145/952532.952753},
  abstract = {Test Driven Development (TDD) is a software development practice in which unit test cases are incrementally written prior to code implementation. In our research, we ran a set of structured experiments with 24 professional pair programmers. One group developed code using TDD while the other a waterfall-like approach. Both groups developed a small Java program. We found that the TDD developers produced higher quality code, which passed 18\% more functional black box test cases. However, TDD developer pairs took 16\% more time for development. A moderate correlation between time spent and the resulting quality was established upon analysis. It is conjectured that the resulting high quality of code written using the TDD practice may be due to the granularity of TDD, which may encourage more frequent and tighter verification and validation. Lastly, the programmers which followed a waterfall-like process often did not write the required automated test cases after completing their code, which might be indicative of the tendency among practitioners toward inadequate testing. This observation supports that TDD has the potential of increasing the level of testing in the industry as testing as an integral part of code development.},
  booktitle = {Proceedings of the 2003 {{ACM Symposium}} on {{Applied Computing}}},
  series = {{{SAC}} '03},
  publisher = {{ACM}},
  urldate = {2019-10-10},
  date = {2003},
  pages = {1135--1139},
  keywords = {1-summarized,5-clean,chp-300,testing},
  author = {George, Boby and Williams, Laurie},
  venue = {Melbourne, Florida}
}

@online{dartteamAsynchronoustestsTestDart2019,
  langid = {american},
  title = {Asynchronous-Tests with the Test {{Dart Package}}},
  url = {https://pub.dev/packages/test#asynchronous-tests},
  abstract = {A full featured library for writing and running Dart tests.},
  journaltitle = {Dart packages},
  type = {Guide},
  urldate = {2019-10-11},
  date = {2019},
  keywords = {3-no-need-to-summarize,5-clean,testing,chp-300},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\EILHN9EN\\test.html}
}

@online{flutterdevteamStyleGuideFlutter2018,
  langid = {english},
  title = {Style {{Guide}} for {{Flutter}} Repo},
  url = {https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo},
  abstract = {Flutter makes it easy and fast to build beautiful mobile apps. - flutter/flutter},
  journaltitle = {GitHub},
  type = {Guide},
  urldate = {2019-10-11},
  date = {2018},
  keywords = {best-practice,1-summarized,5-clean,chp-400,convention},
  author = {{Flutter Dev Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\M6XGT775\\Style-guide-for-Flutter-repo.html}
}

@online{dartteamPerformanceBestPractices2018,
  langid = {english},
  title = {Performance Best Practices},
  url = {https://flutter.dev/docs/testing/best-practices},
  abstract = {How to ensure that your Flutter app is performant.},
  type = {Guide},
  urldate = {2019-10-11},
  date = {2018},
  keywords = {best-practice,1-summarized,5-clean,chp-400},
  author = {{Dart Team}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\WECYHRIL\\best-practices.html}
}

@software{dartteamDartdocTool2019,
  title = {Dartdoc Tool},
  url = {https://github.com/dart-lang/dartdoc},
  abstract = {API documentation tool for Dart. Contribute to dart-lang/dartdoc development by creating an account on GitHub.},
  organization = {{Dart}},
  urldate = {2019-10-12},
  date = {2019-10-11T21:26:07Z},
  keywords = {4-orga,5-clean,chp-400,convention},
  author = {{Dart Team}},
  origdate = {2014-11-11T22:05:42Z}
}

@inreference{wikipediaHungarianNotation2019,
  langid = {english},
  title = {Hungarian Notation},
  url = {https://en.wikipedia.org/w/index.php?title=Hungarian_notation&oldid=903388598},
  abstract = {Hungarian notation is an identifier naming convention in computer programming, in which the name of a variable or function indicates its intention or kind, and in some dialects its type. The original Hungarian Notation uses intention or kind in its naming convention and is sometimes called Apps Hungarian as it became popular in the Microsoft Apps division in the development of Word, Excel and other apps. As the Microsoft Windows division adopted the naming convention, they used the actual data type for naming, and this convention became widely spread through the Windows API; this is sometimes called Systems Hungarian notation.

Hungarian notation was designed to be language-independent, and found its first major use with the BCPL programming language. Because BCPL has no data types other than the machine word, nothing in the language itself helps a programmer remember variables' types. Hungarian notation aims to remedy this by providing the programmer with explicit knowledge of each variable's data type.
In Hungarian notation, a variable name starts with a group of lower-case letters which are mnemonics for the type or purpose of that variable, followed by whatever name the programmer has chosen; this last part is sometimes distinguished as the given name. The first character of the given name can be capitalized to separate it from the type indicators (see also CamelCase). Otherwise the case of this character denotes scope.},
  booktitle = {Wikipedia},
  urldate = {2019-10-12},
  date = {2019-06-25T12:14:42Z},
  keywords = {4-orga,5-clean,chp-400},
  author = {{Wikipedia}},
  file = {C\:\\Users\\sebas\\Zotero\\storage\\LMY77RMD\\index.html},
  note = {Page Version ID: 903388598}
}


